################################################################
NA62Analysis Project
################################################################

2014-10-xx 	Nicolas Lurkin (nicolas.lurkin@cern.ch)
				rev xxx
		- Add possibility to get RawHeader from reconstructed data files. !Warning, Process method
		  signature has changed with no backward compatibility. Please update your analyzers headers
		  and source files. The signature is now:
		      void Process(int iEvent)
	     Use GetMCEvent() and GetRawHeader() to access the MCTruthEvent or the RawHeader structures.
		- Analyzer MCSimple instance moved from BaseAnalysis to Analyzer. !Warning, DefineMCSimple
		  method signature has changed with no backward compatibility. Please update your analyzers
		  headers and source file. The signature is now:
		      void DefineMCSimple()
		  fMCSimple is now always accessible as it belongs to the class.
		  
2014-11-10  Nicolas Lurkin (nicolas.lurkin@cern.ch)
      - Fix NA62Analysis crashes when mcEvent contains no KinePart (Bug NA62RKD-31)
      - Fix NA62Analysis not compiling anymore on lxplus (Bug NA62RKD-33)
		- Fix PhysicsObjects libraries not being built

2014-10-07 	Nicolas Lurkin (nicolas.lurkin@cern.ch)
				rev 360
		- Fix -a option (Bug NA62RKD-26)
		- Fix NA62AnalysisBuilder.py rename command (Bug NA62RKD-24)
		- Fix bug when reading multiple files in input (Bug NA62RKD-27)
		- Fix user PhysicsObjects headers not being included

2014-06-05 	Nicolas Lurkin (nicolas.lurkin@cern.ch)
				rev 348
		- Add python version test. NA62AnalysisBuilder.py works only with python2 > 2.5.
		- Add empty files cmakeTrick.hh(.cc) in ToolsLib to force CMAKE to build the empty library
		  (to be removed when the library is not empty anymore).

2014-06-01 	Nicolas Lurkin (nicolas.lurkin@cern.ch)
				rev 345
		- Fix bug in NA62AnalysisBuilder.py preventing the build when no flag option was used
		  and use the system argparse module if available (Bug NA62RKD-22) 
		- Add an option to the framework (-a) to allow it to run even if one or several 
		  TTree is not found
		- The framework now fully supports input TTrees with any number of branches 
		  (To use this new feature see the documentation of RequestTree, GetEvent and GetObject)
		- Use static libraries instead of shared libraries (for NA62MC Persistency, NA62Analysis
		  libraries and user analyzers)
		- Include ToolsLib in the build (Bug NA62RKD-23)

2014-05-09	Nicolas Lurkin (nicolas.lurkin@cern.ch)
				rev 343
		- Moved several scripts to the scripts folder
		- Add flags to NA62AnalysisBuilder.py for build and prepare commands: 
		  A flag to generate debugging information (-g flag of compiler)
		  A flag to enable all the warning flags
		  A flag to disable c++11 support (automatically enabled if gcc version supports the feature)
		  An option for compiling with several processors
		  Type NA62AnalysisBuilder.py build -h for more info 
		- Additions and improvements to documentation (http://sergiant.web.cern.ch/sergiant/NA62FW/html/)
		- Add TwoLinesCDA and CedarMCTester in the list of validated components 
		  (http://sergiant.web.cern.ch/sergiant/NA62FW/html/componentStatus.html)
		- Several performances improvements in the internal parts of the framework
		- Implement HistoHandler::Iterator<T> to run over a set of booked histograms 
		  (can be accessed with GetIteratorTH1|TH2|TGraph; see HistoHandler::Iterator class documentation
		  at http://sergiant.web.cern.ch/sergiant/NA62FW/html/annotated.html for example on how to use it)
		- Rename GetTree -> BranchTree and FindAndGetTree -> FindAndBranchTree in IOHandler
		- Add GetNEvents method to get the total number of events and GetTree to get a
		  pointer to a TTree.
		- Fix bug in FindROOT when generating dictionary for TObjects in PhysicsObjects and 
		  TRecoLKrCandidateMC in Examples. The corresponding libraries are now compiled.  

		
2014-04-17  Francis Newson (francis.oliver.newson@cern.ch) 
                rev 342
        - Add CedarMCTester to check for consistency after changes
          to Cedar component of NA62MC

2014-04-24	Nicolas Lurkin (nicolas.lurkin@cern.ch)
				rev 341
		- Fix missing extra include dirs, libs dirs and libs in user CMakeLists.txt
		- Use only minimal list of gcc warning flags. To activate the extended list,
		  build NA62Analysis or UserDir manually by issuing 
		  "cmake -H. -Bbuild -DFULL_WARNING=1" 
		  in their respective root directory (only once, NA62AnalysisBulder.py can
		  be used as usual afterwards)

2014-04-19	Evgueni Goudzovski (eg@hep.ph.bham.ac.uk)
		rev. 338
		- added the TwoLinesCDA class into PhysicsLib

2014-04-17	Nicolas Lurkin (nicolas.lurkin@cern.ch)
				rev 337
		- Fix small typo in CMakeLists.txt of Examples and CMakeLists.txt of Templates
		- Correct NA62AnalysisBuilder.py to ignore .svn folders
		- Get rid of few warnings when compiling
		- Start reviewing functions.cc (remove old junk)

2014-04-16	Nicolas Lurkin (nicolas.lurkin@cern.ch) 
				rev 336
		- Update documentation
		- Create page referencing the components of NA62Analysis relevant to user with
		  a description and their current validation status.
		  See http://sergiant.web.cern.ch/sergiant/NA62FW/html/pages.html 
		- Do not try to mkdir in the output file if the directory already exists
		- Reorganize Analyzers directory into categories: TestTools, PhysicsTools, Physics
		- Add PhysicsLib and ToolsLib directories for any tool not being an analyzer
		- Use CMake internally to build the framework

2014-04-14	Nicolas Lurkin (nicolas.lurkin@cern.ch) 
				rev 332
		- NA62AnalysisBuilder.py: Do not remove comments when renaming Analyzer. Bug NARKD-15.
		- Histogram weights are doubles.
		- Booking order of histograms is preserved in the output root file
		- Histograms booked by arrays don't have _ between name and index
		- Alias FillHisto2 for FillHisto (for user willing to use it as a reminder for the type of histogram)

2014-02-17  Nicolas Lurkin (nicolas.lurkin@cern.ch) 
                rev. 319
        - New directory PhysicsObjects created to contain new object classes. Derivation from TObject with automatic generation of ROOT dictionary for an easy integration in TTree branch. Available both in FW and User directory (for custom user objects or inheritance from FW objects). Makefiles and NA62AnalysisBuilder.py modified in consequence.
		- Removed outdated template comments in examples
		- Replicating input event in output and filling custom and standard output trees decoupled. Use ExportEvent() for the first and FillTrees() for the latter.
		- All the file names actually used as input are written in the InputFiles directory of the output file.
		- Moved the enum DetectorID into the NA62Constants namespace (collisions when linking with NA62Reconstruction)
		- StartOfBurst is also called for the first file (end of burst is called for the first time when changing to the second file)
		- Fix for the changes in castor and eos paths
		- Fix bug in MCSimple::ReplaceID leading to some elements of testStruct being skipped. Bug NARKD-7

2014-02-03  Nicolas Lurkin (nicolas.lurkin@cern.ch) 
                rev. 305
        - Fixed a bug preventing the framework to run on data

2014-01-23  Nicolas Lurkin (nicolas.lurkin@cern.ch) 
                rev. 302
        - Silenced massive printing when compiling
        - New "new" syntax available when creating new analyzers (see README for details)
        - Doc is not removed anymore when creating new analyzers
        - New BookHisto syntax available (removed first name argument and using histo name instead).
        - Batch histogram booking (Arrays of histograms)
        - Avoid to set environment variables multiple times in env.(c)sh scripts
        - Added possibility to retrieve plots from a reference file to compare with current run. Manual and automated procedure. New command line parameter -r.
        - Moved some things from Analyzer and BaseAnalysis to HistoHandler, IOHandler, CounterHandler and UserMethods for clarity. Transparent for the user except for THisto, THisto2 and TGraph, use now instead THisto.GetTH1, THisto.GetTH2 and THisto.GetTGraph
        - Improvement of DetectorAcceptance class:
           - Magnetic field now taken into account when propagating or drawing a charged particle track
           - Only sensitive volumes are now used to decide if a particle touched a detector or not
           - The track length inside the sensitive volume of detectors is estimated
           - Updated Geometry file to NA62MC rev. 298
        - Documentation updated
        - Example analyzers commented and updated to the most recent syntax

2014-01-14      Antonino Sergi (Antonino.Sergi@cern.ch)
                rev. 298
                - Few modifications for compatibility with the latest
                  revision of NA62MC, in preparation for the release of
                  MC Overlay
                - Fixed a typo in scripts/env.csh

2013-12-03  Nicolas Lurkin (nicolas.lurkin@cern.ch) 
                rev. 294
        - Log message: NA62AnalysisBuilder.py: fix detection of comments with /// and taking new GetOutput<> into account in dependency resolution
        - VertexCDA: removing unnecessary fGeom member and adding some counters for event selection.
        - main.cc: Expending the -h help and better handling of exit signals
        - Analyzer: Possibility to save histogram in sub-directories (new BookHisto signature, backward compatible). Filling output trees (copy from input, standard tree or custom tree) is done only if ExportEvent is called.
        - BaseAnalysis: Will not crash anymore if TTree is not found in input file
        - DetectorAcceptance: step precision is now optimised if not specified (best option) and detection of substations now works for GTK, LAV and Spectrometer. Fixing bug with opening ROOT geometry file.
        - MCSimple: Possibility to retrieve all the particles in the final state or all particles at a given decay level + printing of the current event decay tree
        - ParticleInterface: added PrintTable method
        - ParticleTree: added some methods to help the implementation of the new MCSimple functionalities
        - Example LKrPhotonMC: Some fixes

Example Pi0Reconstruction: Use the new automatic step optimisation for DetectorAcceptance

2013-10-04	Nicolas Lurkin (nicolas.lurkin@cern.ch)
                rev. 288
		- New sections added in the documentation (online + README)
		- Code documentation modified to match NA62 doxygen syntax 

2013-09-19	Antonino Sergi (Antonino.Sergi@cern.ch)
                rev. 287
		- Some improvement in the input file management 
                - Modified command line options to match NA62Reconstruction
                - Executable usage prompted if no command line option is given
                - Another detail added to the documentation

2013-09-19	Antonino Sergi (Antonino.Sergi@cern.ch)
                rev. 286
		- Fixed csh environment scripts and improved documentation

2013-09-18	Antonino Sergi (Antonino.Sergi@cern.ch)
                rev. 285
		- Fixed environment scripts

2013-09-11	Antonino Sergi (Antonino.Sergi@cern.ch)
                rev. 284
		- First public version of the analysis framework developed by Nicolas Lurkin,
                  with some examples and a test module
		- This first version is intended to give the possibility
		  to developers to test the framework and to begin to implement 
                  analysis modules that, after being validated, will become part 
                  of the framework.
